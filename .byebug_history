c
n
self.long_url.include? "http://"
n
!self.long_url.include? "http://"
c
(!self.long_url.include? "https://")
c
self.long_url =~ /(\w+\.)+\w{2,}/
!self.long_url.include? "www."
self.long_url.include? "www."
!self.long_url.include? "http://"
!self.long_url.include? "https://"
self.long_url
c
(string1[2] =~ /(\w+\.)+\w{2,}/) == nil
!string1[2] =~ /(\w+\.)+\w{2,}/
string1[2] =~ /(\w+\.)+\w{2,}/
string1 = string[2].partition("www.")
string[2].include? "www."
string = self.long_url.partition("https://")
c
string[2] =~ /(\w+\.)+\w{2,}/
string = self.long_url.partition("www.")
n
!self.long_url.include? "www."
self.long_url.include? "www."
n
self.long_url.include? "https://"
self.long_url
c
self.long_url.include? "www."
n
self.long_url
continue
n
c
n
nn
n
string = self.long_url.partition("www.")
n
c
self.long_url =~ "www."
(self.long_url =~ "www.") == nil
n
self
self.long_url
continue
n
self.long_url =~ "www."
self.long_url.include? "https://"
self.long_url
c
self.long_url.include? "https://www."
self.long_url
c
n
self.long_url =~ /(\w+\.)+\w{2,}/
n
!self.long_url.include? "https://www."
self.long_url
continue
c
asd
params[:long_url].include? "https://"
n
params[:long_url]
url
c
url
n
params[:long_url]
n
string[2] =~ /(\w+\.)+\w{2,}/
string
c
string1[2] =~ /(\w+\.)+\w{2,}/
string1 = "www.facebook.com".partition("www.")
string[2] =~ /(\w+\.)+\w{2,}/
string[1]
params[:long_url]
string[2]
n
c
params[:long_url]
c
Url.find_by(short_url: params[:short_url])
params[:short_url]
params
c
url.errors.messages[:long_url][0]
url.errors.messages[:long_url]
url.errors
url
c
n
url
n
    url.long_url = params[:long_url]
if params[:long_url].include? "https://www."
  end
    url.long_url = "https://www.#{params[:long_url]}"
  else
    url.long_url = "#{string[1]}www.#{string[2]}"
    string = params[:long_url].partition("https://")
  elsif params[:long_url].include? "https://"
    url.long_url = params[:long_url]
if params[:long_url].include? "https://www."
params[:long_url].include? "https://www."
if params[:long_url].include? "https://www."
params[:long_url]
url
continue
Url.find_by(long_url: url.long_url)
url
c
continue
sl
c
ccccccccccccccccc
continue
sl
url.long_url
url
@short_url
c
@short_url
n
c
n
url.short_url
url
continue
rall
continue
r
n
c
ccc
odjdc
url.long_url
url
rt_url: params[:short_url])
Url.find_by(short_url: params[:short_url]
params[:short_url]
url
n
c
ccc
odjdc
url.long_url
url
[:short_url]
params[:short_url]
url
n
c
ccc
odjdc
url.long_url
url
url.long_url
url
